<script src="https://cdnjs.cloudflare.com/ajax/libs/vue/1.0.18/vue.min.js"></script>
<script src="/beta/javascripts/pinyin-convert.js" ></script>


<script>


    var lessonDashboardApp = new Vue({
        el: "#lessonDashboardApp",
        data: {
            vuex: JSON.parse(window.localStorage.getItem('vuex')),
            lesson: {},
            dialogue: {},
            vocab: {},
            expansion: {},
            grammar: {},
            downloads: {},
            questions: {},
            course: {},
            comments: {},
            decks: {},
            choiceCard : true,
            matchingCard: false,
            reArrangeCard: false,
            audioCard: false,
            exerciseResult: false,
            exerciseResultLoader: true,
            choiceStep : 0,
            matchingStep : 0,
            rearrangeStep : 0,
            dictationStep : 0,
            matchEn : [],
            matchHanzi : [],
            matchAns : [],
            audioAns: [],
            exerciseResults: {
                score: 0,
                total: 0,
            },
            searchString: "",
            searchType: [],
            filePercent: 0,
            fileLoader: false,
            fileDownloadName: '',
            commentMessage: '',
            replyUsername: '',
            replyId: 0,
            replyId2: 0,
            commentId: 0,
            selectedDeckId: 0,
            newDeckCategory: "",
            isActive: "video",
            hlsNativeSupport: true

        },
        methods: {

            getToken: async function() {

                let results = await fetch("https://www.chinesepod.com/api/v1/entrance/get-user")
                .then(resp => resp.json())
                .then(res => {
                    // console.log("this res", res);
                    return res;
                })

                return results;

            },

            getAPIFetch: async function(api) {

                let results = await fetch(api,{
                    credentials: 'same-origin',
                    headers: {
                        'Accept': 'application/json, text/plain, */*',
                        'Content-Type': 'application/json',
                        'Authorization': 'Bearer '+ (this.vuex ? this.vuex.token : '')
                    },
                })
                .then(resp => resp.json())
                .then(res => {
                    // console.log("this res", res);
                    return res;
                })

                return results;

            },

            postAPIFetch: async function(api, params) {

                let options = {
                    credentials: 'same-origin',
                    headers: {
                        'Accept': 'application/json, text/plain, */*',
                        'Content-Type': 'application/json',
                        'Authorization': 'Bearer '+ (this.vuex ? this.vuex.token : '')
                    },
                    method: "POST",
                    body: JSON.stringify(params)
                }

                let okOption = false

                let results = await fetch(api,options)

                    .then(res => {
                        return res.statusText;
                    })

                
                if (okOption) {
                    return {status:"ok"}
                } else {
                    return results;
                }

            },

            patchAPIFetch: async function(api, params) {

                let options = {
                    credentials: 'same-origin',
                    headers: {
                        'Accept': 'application/json, text/plain, */*',
                        'Content-Type': 'application/json',
                        'Authorization': 'Bearer '+ (this.vuex ? this.vuex.token : '')
                    },
                    method: "PATCH",
                    body: JSON.stringify(params)
                }

                let okOption = false

                let results = await fetch(api,options)

                    .then(res => {
                        return res.statusText;
                    })


                if (okOption) {
                    return {status:"ok"}
                } else {
                    return results;
                }

            },

            putAPIFetch: async function(api, params) {

                let options = {
                    credentials: 'same-origin',
                    headers: {
                        'Accept': 'application/json, text/plain, */*',
                        'Content-Type': 'application/json,text/plain',
                        'Authorization': 'Bearer '+ (this.vuex ? this.vuex.token : '')
                    },
                    method: "PUT",
                    body: JSON.stringify(params)
                }

                let okOption = false

                let results = await fetch(api,options)
                    
                    .then(res => {
                        return res.statusText;
                    })

                
                if (okOption) {
                    return {status:"ok"}
                } else {
                    return results;
                }

            },

            putAPI: async function(api, params) {

                let options = {
                    credentials: 'same-origin',
                    headers: {
                        'Accept': 'application/json, text/plain, */*',
                        'Content-Type': 'application/json',
                        'Authorization': 'Bearer '+ (this.vuex ? this.vuex.token : '')
                    },
                    method: "PUT",
                    body: JSON.stringify(params)
                }

                let okOption = false

                let results = await fetch(api,options)
                    .then(res => res.json() )
                    .then(resp => {
                    console.log("resp", resp);

                        return resp;
                    })

                    console.log("results", results);

                return results;

            },

            deleteAPI: async function(api, params) {

                let options = {
                    credentials: 'same-origin',
                    headers: {
                        'Accept': 'application/json, text/plain, */*',
                        'Content-Type': 'application/json',
                        'Authorization': 'Bearer '+ (this.vuex ? this.vuex.token : '')
                    },
                    method: "DELETE",
                    body: JSON.stringify(params)
                }

                let results = await fetch(api,options)
                    // .then(resp => resp.json())
                    .then(res => {
                        return res.statusText;
                })

                return results;

            },

            setCommentId: function(commentId, content='') {
                this.commentId = commentId

                if(content) {
                    this.commentMessage = content

                    document.getElementById('commentMessage').scrollIntoView({
                        behavior: 'smooth'
                    });
                    document.getElementById("commentMessage").focus()
                }
            },

            deleteCommentId: async function() {

                let params = {
                    lessonId: this.lesson.id,
                    commentId: this.commentId,
                    isAdmin: false
                }

                let resp = await this.deleteAPI("https://www.chinesepod.com/api/v1/lessons/comments", params)

                this.commentId = 0

                this.comments = await this.getAPIFetch('/api/v1/lessons/get-comments?lessonId='+this.lesson.id);

                this.showMessage('Comment Deleted!', 'success')

            },

            studyCompleted: async function() {

                let params = {
                    lessonId: this.lesson.id,
                    status: this.lesson.studied > 0 ? false : true
                }

                this.lesson.studied = this.lesson.studied > 0 ? 0 : 1;

                let toogleSave = await this.postAPIFetch("https://www.chinesepod.com/api/v1/dashboard/toggle-studied", params)

                this.showMessage('Settings Saved!', 'success')
            },

            saveLesson: async function() {

                let params = {
                    lessonId: this.lesson.id,
                    status: !this.lesson.saved
                }

                this.lesson.saved = !this.lesson.saved

                let toogleSave = await this.postAPIFetch("https://www.chinesepod.com/api/v1/dashboard/toggle-saved", params)

                this.showMessage('Lesson Saved!', 'success')
            },

            setCharset: async function(charSet) {

                let params = {type: "charSet", value: charSet}


                this.vuex.userInfo.charSet = charSet
                localStorage.setItem('vuex',  JSON.stringify(this.vuex));

                let toogleSave = await this.putAPIFetch("https://www.chinesepod.com/api/v1/account/settings/update", params)

                this.showMessage('Settings Saved!', 'success')
            },

            addVocab: async function(vocab) {

                vocab.lessonId = this.lesson.id

                let toogleSave = await this.putAPIFetch("https://www.chinesepod.com/api/v1/vocabulary/words/create", vocab)

                this.showMessage('Added Vocabulary!', 'success')
            },

            replyComment: async function(username, replyId, replyId2=0) {
                
                this.replyUsername = username;
                this.replyId = replyId;
                this.replyId2 = replyId2;
                
                document.getElementById('commentMessage').scrollIntoView({
                    behavior: 'smooth'
                });
                document.getElementById("commentMessage").focus()
            },

            addComment: async function() {
                

                if (this.commentMessage) {

                    let params = {
                        lessonId: this.lesson.id, 
                        content: this.commentMessage, 
                        isAdmin: false
                    }

                    if (this.replyUsername) {
                        params.replyTo = this.username
                        params.replyId = this.replyId
                        params.replyId2 = this.replyId2
                    }

                    let response;
                    
                    if (this.commentId){
                        params.commentId = this.commentId
                        response = await this.patchAPIFetch("https://www.chinesepod.com/api/v1/lessons/comments", params)
                    } else {
                        response = await this.postAPIFetch("https://www.chinesepod.com/api/v1/lessons/comments", params)
                    }
 
                    if(response) {
                        this.commentMessage = "";
                        this.username = ""
                        this.replyId = ""
                        this.replyId2 = ""
                        this.commentId = 0

                        this.comments = await this.getAPIFetch('/api/v1/lessons/get-comments?lessonId='+this.lesson.id);
                        this.showMessage('Your Comment has been posted', 'success')

                    } else {
                        this.showMessage('Something went wrong, please try again later', 'error')

                    }
                } else {
                    this.showMessage('Please add comment', 'warning')

                }


            },

            pinyinConvert: function(pinyin) {
                return PinyinConverter.convert(pinyin);
            },

            nextChoice: function(ndx,selectedChoice) {
                // console.log("ans",ndx,selectedChoice);
                this.questions.choice[ndx].selectedChoice = selectedChoice;

                this.choiceStep++
                if (this.choiceStep >= this.questions.choice.length) {
                    console.log("show next set of cards",this.questions);
                    this.choiceCard = false;
                    this.matchingCard = true;
                }
            },

            rumbleArray: function(arr, max) {
                let ndxA, ndxB, ndxC;
              
                ndxA = Math.floor(Math.random() * (max + 1));
                ndxB = Math.floor(Math.random() * (max + 1));
                ndxC = Math.floor(Math.random() * (max + 1));
                // console.log(ndxA,ndxB,ndxC);
                var tmp = arr[ndxA];
                arr[ndxA] = arr[ndxB];
                arr[ndxB] = tmp;

                var tmp2 = arr[ndxA];
                arr[ndxA] = arr[ndxC];
                arr[ndxC] = tmp2;
               

                return arr;
            },

            setMatchq: function(id){
                if (this.matchHanzi.length < 5) {
                    // console.log("ID>>",id);
                    if (!this.matchHanzi.includes(id)) 
                    this.matchHanzi.push(id)
                    
                } else {
                    // abort selecttion show warning
                }

                // console.log(this.matchHanzi);
                this.nextReArrange()

            },
            setMatcha: function(id){
                if (this.matchEn.length < 5) {
                    // console.log("ID>>",id);
                    if (!this.matchEn.includes(id)) 
                    this.matchEn.push(id)
                } else {
                    // abort selecttion show warning
                }
                // console.log(this.matchEn);
                this.nextReArrange()
            },

            nextReArrange : function () {

                if (this.matchEn.length >= 5 && this.matchHanzi.length >= 5) {
                    this.matchingStep++;
                    // console.log("next step", this.matchingStep);
                    this.matchAns.push({
                        'matchEn' : this.matchEn,
                        'matchHanzi' : this.matchHanzi
                    })

                    this.matchEn = []
                    this.matchHanzi = []
                }

                if (this.matchingStep >= this.questions.matching.length ) {
                    this.reArrangeCard = true
                    this.matchingCard = false

                    

                }
            },

            nextCardTallyOrder : function () {
                this.rearrangeStep ++

                if (this.rearrangeStep >= this.questions.rearrange.length) {
                    this.audioCard = true
                    this.reArrangeCard = false
                }
            },

            nextAudio : function () {
                this.dictationStep ++

                if (this.dictationStep >= this.questions.audio.length) {
                    this.audioCard = false
                    this.exerciseResult = true
                    this.showResults()
                }
            },

            showResults : function () {
                let this_ = this
                console.log("fetching results");
                // choice
                if (this.questions && this.questions.choice)
                this.questions.choice.forEach((choice)=> {
                    if (choice.answer.id == choice.selectedChoice) {
                        this_.exerciseResults.score += choice.score
                    }

                    this_.exerciseResults.total += choice.score
                });
                console.log("compute matching");

                // matching type
                if (this.questions && this.questions.matching){
                    this.questions.matching.forEach((matching, ndx)=> {
                        this_.exerciseResults.total += matching.score
                    });

                    this.matchAns.forEach((ans, ndx) => {
                        ans.matchHanzi.forEach((hanziId, hanziNdx) => {
                            if(hanziId == this.matchAns[ndx].matchEn[hanziNdx]) {
                                this_.exerciseResults.score ++
                            }
                        });
                    });
                }


                // total rearrange
                if (this_.questions && this_.questions.rearrange) {

                    let reorders = document.querySelectorAll(".rearrange-list");
                    reorders.forEach((reorder, i) => {
                        this_.exerciseResults.total += this_.questions.rearrange[i].score
                        let children = [...reorder.children]
                        let score = 0;
                        children.forEach((c, ndx) => {
                            if (ndx+1 == c.id) score++
                        })

                        if (score > 0) this_.exerciseResults.score += (score-1)
                    })
                }

                // total audio
                if (this_.questions && this_.questions.audio) {
                    this_.questions.audio.forEach((audio,i) => {
                        this_.exerciseResults.total += audio.score

                        if (   ( this_.audioAns[i] && audio.answer.e.trim() === this_.audioAns[i].trim()) 
                            || ( this_.audioAns[i] && audio.answer.p.trim() === this_.pinyinConvert(this_.audioAns[i].trim()) )
                            || ( this_.audioAns[i] && audio.answer.t.trim() === this_.audioAns[i].trim())
                            || ( this_.audioAns[i] && audio.answer.s.trim() === this_.audioAns[i].trim())
                        ) {
                            this_.exerciseResults.score += audio.score
                        }
                    })
                }
 

                
                this.exerciseResultLoader = false;

            },

            playAudio : function (id) {
                let play_audio = document.getElementById(id);
                play_audio.play();
            },

            setClassHanzi : function(id){
            
                let active=false;
                let ndx = null;

                if (this.matchHanzi.includes(id)) {
                    active = true
                    ndx = this.matchHanzi.findIndex(x => x === id);
                    ndx = ndx+1
                }

                let data = {
                    'selected': active,
                    'btn-primary': active && ndx == 1, 
                    'btn-success': active && ndx == 2, 
                    'btn-info': active && ndx == 3, 
                    'btn-warning': active && ndx == 4, 
                    'btn-danger': active && ndx == 5
                }

                return data;
                
            },

            setClassEn : function(id){
            
                let active=false;
                let ndx = null;

                if (this.matchEn.includes(id)) {
                    active = true
                    ndx = this.matchEn.findIndex(x => x === id);
                    ndx = ndx+1
                }

                let data = {
                    'selected': active,
                    'btn-primary': active && ndx == 1, 
                    'btn-success': active && ndx == 2, 
                    'btn-info': active && ndx == 3, 
                    'btn-warning': active && ndx == 4, 
                    'btn-danger': active && ndx == 5
                }

                return data;
            
            },

            searchQuery: function(){

                let queryString = ""
                let queryStringType = ""

                if (this.searchString) 
                queryString = "search="+this.searchString
                
                queryStringType = this.searchType.join("&")

                if (queryStringType) 
                queryString += "&" + queryStringType
                
                if(queryString)
                window.location.href = "/explore?"+queryString
                
            },

            downloadURI: function(uri, name) {
                // console.log("called DL");
                this.fileLoader = true
                this.fileDownloadName = name
                // var url = "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerFun.mp4";
                var this_ = this
                $.ajax({
                    url: uri,
                    method: 'GET',
                    xhrFields: {
                        responseType: 'blob'
                    },
                    xhr: function () {
                        var xhr = new window.XMLHttpRequest();
                        xhr.addEventListener("progress", function (evt) {
                            if(evt.lengthComputable) {
                                var percentComplete = evt.loaded / evt.total;
                                this_.filePercent = parseInt(percentComplete * 100)
                                // console.log(percentComplete);
                            }
                        }, false);
                        return xhr;
                    },
                    success: function (data) {
                        // console.log(data);
                        var a = document.createElement('a');
                        var url = window.URL.createObjectURL(data);
                        a.href = url;
                        a.download = name;
                        document.body.append(a);
                        a.click();
                        a.remove();
                        window.URL.revokeObjectURL(url);
                        this_.fileLoader = false
                        this_.filePercent = 0
                    }
                });
            },
            printContent: function(divId) {

                let body = document.getElementById("printable-"+divId)

                var mywindow = window.open('', divId, 'height=400,width=600');
                mywindow.document.write('<html><head><title>Chinesepod Lesson</title>');
                mywindow.document.write('<link rel="stylesheet" href="/beta/stylesheets/printable.css" type="text/css" />');
                mywindow.document.write('</head><body >');
                mywindow.document.write(body.innerHTML);
                mywindow.document.write('</body></html>');
                mywindow.document.close();
                mywindow.focus();
                setTimeout(function(){mywindow.print();},1000);
                // mywindow.close();

                // return true;
            },

            lookupHanzi: async function(hanzi) {
                
                let hanziLookup = await this.getAPIFetch('/beta/api/v1/lookup-hanzi/'+hanzi)

                return hanziLookup
            },

            showMessage: function(message, action) {
                console.log("show message", message, action);
                document.getElementById("messageContainer").innerHTML = `<div class="text-center alert alert-${action}" role="alert">
                                            ${message}
                                        </div>`
                

                setTimeout(function(){
                    document.getElementById("messageContainer").innerHTML = ""
                },3000);
            },

            copyClipboard: function(copyData) {
                navigator.clipboard.writeText(copyData);

                this.showMessage("Copied to clipboard!", "success")
            },

            setSelectedDeckId: function(selectedDeckId) {
                this.selectedDeckId = selectedDeckId

                this.addToDecksMany()
            },

            addDeckCategory: async function() {
                // set category and save all covab to that category
                let data = {
                    tag : this.newDeckCategory
                }
                let response = await this.putAPI("https://www.chinesepod.com/api/v1/vocabulary/decks", data)
                // console.log("res from new deck category",response);

                if (response) {
                    // console.log("res from new deck category",response);
                    this.selectedDeckId = response.id

                    await this.addToDecksMany()
                    this.showMessage("Vocabulary Saved!", "success")

                }

            },

            addToDecksMany: async function() {
                // https://www.chinesepod.com/api/v1/vocabulary/words/add-many
                // {"deckId":167572,"vocabularyId":[7236527,7236528,7236529,7236526,7236524,7236525,7236522,7236523,7236520,7236521,7236518,7236519,7236517,7236516,7236514,7236515,7236513,7236512,7236511]}
                // Method PUT

                let ids = []
                for (let i=0; i < this.vocab.length; i++) {
                    ids.push(this.vocab[i].id)
                }

                let data = {
                    deckId: this.selectedDeckId,
                    vocabularyId: ids
                }

                let response = await this.putAPIFetch("https://www.chinesepod.com/api/v1/vocabulary/words/add-many", data)

                if (response) {
                    
                    this.decks = await this.getAPIFetch('https://www.chinesepod.com/api/v1/vocabulary/decks');
                    this.showMessage("Vocabulary Saved!", "success")
                }
            },

            showHanzi: function(id, animateClass, hanzi) {
                // wait to load container
                setTimeout(function(){
                    let hanziContainer = document.getElementById(id);
                    let loader = hanziContainer.querySelector('.loader')

                    loader.remove()

                    if( hanziContainer ) {
                        let writert = HanziWriter.create(id, hanzi, {
                            width: 80,
                            height: 80,
                            renderer: 'svg',
                            radicalColor: '#166E16',
                            onCorrectStroke: printStrokePoints,
                            onMistake: printStrokePoints,
                            showCharacter: false,
                        });

                        document.querySelector('.'+animateClass).addEventListener('click', function () {
                            writert.animateCharacter();
                        });
                    }
                },500);

            },

            floatingTogglePlayback: async function() {
                if (this.isActive === 'video') {
                    if (this.videoPlayer) {
                    if (this.videoPlayer.state() === 'playing') {
                        this.videoPlayer.pause();
                    } else {
                        this.videoPlayer.play();
                    }
                    } else {
                    await this.videoplyr.togglePlay(!this.videoplyr.playing);
                    }
                } else {
                    await this.togglePlayback();
                }
            },

            hlsSupport: function() {
                try {
                    return Hls && Hls.isSupported();
                } catch (e) {
                    alert(e);
                    return false;
                }
            },

            setActive: function(active){
                this.isActive = active
            }, 



            
        },
        computed: {
            fetchLessons: async function(){

                let authToken = await this.getToken();
                console.log(authToken);

                if (!this.vuex.token) {
                    console.log('login');
                    window.location = "/login";
                } else {
                    console.log('continue');
                    // window.location = "/login";
                }

                this.lesson = await this.getAPIFetch('https://www.chinesepod.com/api/v1/lessons/get-lesson?slug=<%= slug %>');
                // this.lesson = {"id":"4279","title":"中国的职场文化","slug":"%E4%B8%AD%E5%9B%BD%E7%9A%84%E8%81%8C%E5%9C%BA%E6%96%87%E5%8C%96","introduction":"\r\n\r\n你曾在中国工作过吗？你是否也觉得中国的工作文化和自己国家的工作文化有很大的差异呢？我们一起来看看中国人一般都如何处理合约问题，以及他们又为什么这么重视聚餐文化和酒桌文化吧！","hash_code":"51492463b0875d1a36c6bb9a6b2290725c3b80d5","image":"https://s3contents.chinesepod.com/4279/51492463b0875d1a36c6bb9a6b2290725c3b80d5/images/67c2d83fe26648a2ccbbaa3eb6bdbfd675505870.jpg","type":"lesson","level":"Upper Intermediate","hosts":"Lyn,Joy","publication_timestamp":"2020-01-20T10:45:00.000Z","saved":false,"studied":false,"video":"ennz8eke92","mp3_dialogue":"","mp3_public":"https://s3contents.chinesepod.com/4279/51492463b0875d1a36c6bb9a6b2290725c3b80d5/mp3/chinesepod_D4279pb.mp3","mp3_private":"https://s3contents.chinesepod.com/4279/51492463b0875d1a36c6bb9a6b2290725c3b80d5/mp3/chinesepod_D4279pr.mp3","mp3_thefix":"https://s3contents.chinesepod.com/4279/51492463b0875d1a36c6bb9a6b2290725c3b80d5/mp3/chinesepod_D4279rv.mp3","pdf1":"https://s3contents.chinesepod.com/4279/51492463b0875d1a36c6bb9a6b2290725c3b80d5/pdf/chinesepod_D4279.pdf","pdf2":"https://s3contents.chinesepod.com/4279/51492463b0875d1a36c6bb9a6b2290725c3b80d5/pdf/chinesepod_D4279trad.pdf","extra":false,"sources":{"updatedAt":1623233348017,"id":"4279","wistia":{"simplified":"ennz8eke92"},"vimeo":null,"youtube":{"simplified":"0VPIgKThplc","traditional":"n5H-SKqq5qs"},"podcast":null,"dialogue":null,"review":null,"recap":null,"hls":{"simplified":"https://d3glhinmyc42ep.cloudfront.net/8b27d2e0-77f0-4cbb-8b3d-2a1ad3a957a9/hls/ennz8eke92.m3u8"}}}
                if (this.lesson && this.lesson.id) {

                    if (this.lesson.video) {
                        this.isActive = "video";
                    } else if (this.lesson.mp3_private) {
                        this.isActive = "audio";
                    } else if (this.lesson.mp3_dialogue) {
                        this.isActive = "dailogue";
                    } else if (this.lesson.mp3_thefix) {
                        this.isActive = "review";
                    }

                    // console.log(this.lesson);
                    this.mountVideo

                    let courseId = '<%= courseId %>'
                    
                    if (courseId) this.course = await this.getAPIFetch('/api/v1/dashboard/course-lessons?courseId='+courseId+'&exclude[0]='+this.lesson.id+'&limit=2');
                    
                    // this.dialogue = await this.getAPIFetch('https://www.chinesepod.com/api/v1/lessons/get-dialogue?lessonId='+this.lesson.id);
                    // this.vocab = await this.getAPIFetch('https://www.chinesepod.com/api/v1/lessons/get-vocab?lessonId='+this.lesson.id);
                    // this.expansion = await this.getAPIFetch('https://www.chinesepod.com/api/v1/lessons/get-expansion?lessonId='+this.lesson.id);
                    // this.grammar = await this.getAPIFetch('https://www.chinesepod.com/api/v1/lessons/get-grammar?lessonId='+this.lesson.id);
                    // this.downloads = await this.getAPIFetch('https://www.chinesepod.com/api/v1/lessons/get-downloads?lessonId='+this.lesson.id);
                    // this.comments = await this.getAPIFetch('https://www.chinesepod.com/api/v1/lessons/get-comments?lessonId='+this.lesson.id);
                    // this.questions = await this.getAPIFetch('https://www.chinesepod.com/api/v1/exercises/get-questions?lessonId='+this.lesson.id);
                    // this.decks = await this.getAPIFetch('https://www.chinesepod.com/api/v1/vocabulary/decks');

                    // this.dialogue = {"speakers":["A","B","A","B","A","B"],"dialogue":[{"display_order":1,"speaker":"A","row_2":"We are having an exam on the 11th. Have you started studying yet?","audio":"mp3/64/chinesepod_8204_dialogue_78711_prototype_1574907364.mp3","v3_id":"4264","vocabulary":[{"s":"十一","t":"十一","p":"shi2yi1","en":"eleven"},{"s":"号","t":"號","p":"hao4","en":"day of a month"},{"s":"就","t":"就","p":"jiu4","en":"then"},{"s":"要","t":"要","p":"yao4","en":"going to"},{"s":"考试","t":"考試","p":"kao3shi4","en":"to take an exam"},{"s":"了","t":"了","p":"le5","en":"particle indicating emphasis"},{"s":"开始","t":"開始","p":"kai1shi3","en":"to start"},{"s":"读书","t":"讀書","p":"du2shu1","en":"to study"},{"s":"了","t":"了","p":"le5","en":"particle indicating change of state"},{"s":"吗","t":"嗎","p":"ma5","en":"indicates a yes-no question (added to a statement)"}],"sentence":[{"s":"十一","t":"十一","p":"shi2yi1","en":"eleven"},{"s":"号","t":"號","p":"hao4","en":"day of a month"},{"s":"就","t":"就","p":"jiu4","en":"then"},{"s":"要","t":"要","p":"yao4","en":"going to"},{"s":"考试","t":"考試","p":"kao3shi4","en":"to take an exam"},{"s":"了","t":"了","p":"le5","en":"particle indicating emphasis"},"。",{"s":"开始","t":"開始","p":"kai1shi3","en":"to start"},{"s":"读书","t":"讀書","p":"du2shu1","en":"to study"},{"s":"了","t":"了","p":"le5","en":"particle indicating change of state"},{"s":"吗","t":"嗎","p":"ma5","en":"indicates a yes-no question (added to a statement)"},"？"],"en":"We are having an exam on the 11th. Have you started studying yet?","p":"shi2yi1 hao4 jiu4 yao4 kao3shi4 le5 。kai1shi3 du2shu1 le5 ma5 ？","t":"十一號就要考試了。開始讀書了嗎？","s":"十一号就要考试了。开始读书了吗？"},{"display_order":3,"speaker":"B","row_2":"I only read one page.","audio":"mp3/64/chinesepod_8204_dialogue_78713_prototype_1574907531.mp3","v3_id":"4264","vocabulary":[{"s":"唉","t":"唉","p":"ai1","en":"to sigh"},{"s":"我","t":"我","p":"wo3","en":"I"},{"s":"只","t":"只","p":"zhi3","en":"only"},{"s":"读","t":"讀","p":"du2","en":"to read"},{"s":"了","t":"了","p":"le5","en":"particle indicating action complete"},{"s":"一","t":"一","p":"yi1","en":"one"},{"s":"页","t":"頁","p":"ye4","en":"page"}],"sentence":[{"s":"唉","t":"唉","p":"ai1","en":"to sigh"},"...",{"s":"我","t":"我","p":"wo3","en":"I"},{"s":"只","t":"只","p":"zhi3","en":"only"},{"s":"读","t":"讀","p":"du2","en":"to read"},{"s":"了","t":"了","p":"le5","en":"particle indicating action complete"},{"s":"一","t":"一","p":"yi1","en":"one"},{"s":"页","t":"頁","p":"ye4","en":"page"},"。"],"en":"I only read one page.","p":"ai1 ...wo3 zhi3 du2 le5 yi1 ye4 。","t":"唉...我只讀了一頁。","s":"唉...我只读了一页。"},{"display_order":4,"speaker":"A","row_2":"No problem. You still have a week.","audio":"mp3/64/chinesepod_8204_dialogue_78714_prototype_1574907569.mp3","v3_id":"4264","vocabulary":[{"s":"没事儿","t":"沒事兒","p":"mei2shi4r5","en":"no problem"},{"s":"你","t":"你","p":"ni3","en":"you"},{"s":"还有","t":"還有","p":"hai2you3","en":"still have"},{"s":"一","t":"一","p":"yi1","en":"one"},{"s":"星期","t":"星期","p":"xing1qi1","en":"week"},{"s":"呢","t":"呢","p":"ne5","en":"particle indicating strong affirmation"}],"sentence":[{"s":"没事儿","t":"沒事兒","p":"mei2shi4r5","en":"no problem"},"，",{"s":"你","t":"你","p":"ni3","en":"you"},{"s":"还有","t":"還有","p":"hai2you3","en":"still have"},{"s":"一","t":"一","p":"yi1","en":"one"},{"s":"星期","t":"星期","p":"xing1qi1","en":"week"},{"s":"呢","t":"呢","p":"ne5","en":"particle indicating strong affirmation"},"！"],"en":"No problem. You still have a week.","p":"mei2shi4r5 ，ni3 hai2you3 yi1 xing1qi1 ne5 ！","t":"沒事兒，你還有一星期呢！","s":"没事儿，你还有一星期呢！"},{"display_order":5,"speaker":"B","row_2":"I definitely won’t make it.","audio":"mp3/64/chinesepod_8204_dialogue_78715_prototype_1574907597.mp3","v3_id":"4264","vocabulary":[{"s":"一定","t":"一定","p":"yi1ding4","en":"surely"},{"s":"来不及","t":"來不及","p":"lai2bu5ji2","en":"there\\&#039;s not enough time (to do sth)"},{"s":"的","t":"的","p":"de5","en":"(used at the end of a declarative sentence for emphasis)"}],"sentence":[{"s":"一定","t":"一定","p":"yi1ding4","en":"surely"},{"s":"来不及","t":"來不及","p":"lai2bu5ji2","en":"there\\&#039;s not enough time (to do sth)"},{"s":"的","t":"的","p":"de5","en":"(used at the end of a declarative sentence for emphasis)"},"。"],"en":"I definitely won’t make it.","p":"yi1ding4 lai2bu5ji2 de5 。","t":"一定來不及的。","s":"一定来不及的。"},{"display_order":6,"speaker":"A","row_2":"No, let’s study together. We’ll be done with it no time.","audio":"mp3/64/chinesepod_8204_dialogue_78716_prototype_1574907449.mp3","v3_id":"4264","vocabulary":[{"s":"不会","t":"不會","p":"bu4hui4","en":"will not (act, happen etc)"},{"s":"我们","t":"我們","p":"wo3men5","en":"we"},{"s":"一块儿","t":"一塊兒","p":"yi1kuai4r5","en":"together"},{"s":"复习","t":"復習","p":"fu4xi2","en":"to review"},{"s":"一下子","t":"一下子","p":"yi1xia4zi5","en":"in a short while"},{"s":"就","t":"就","p":"jiu4","en":"then"},{"s":"读","t":"讀","p":"du2","en":"to study"},{"s":"完","t":"完","p":"wan2","en":"(suffix indicating completion)"},{"s":"了","t":"了","p":"le5","en":"particle indicating change of state"}],"sentence":[{"s":"不会","t":"不會","p":"bu4hui4","en":"will not (act, happen etc)"},"，",{"s":"我们","t":"我們","p":"wo3men5","en":"we"},{"s":"一块儿","t":"一塊兒","p":"yi1kuai4r5","en":"together"},{"s":"复习","t":"復習","p":"fu4xi2","en":"to review"},"。",{"s":"一下子","t":"一下子","p":"yi1xia4zi5","en":"in a short while"},{"s":"就","t":"就","p":"jiu4","en":"then"},{"s":"读","t":"讀","p":"du2","en":"to study"},{"s":"完","t":"完","p":"wan2","en":"(suffix indicating completion)"},{"s":"了","t":"了","p":"le5","en":"particle indicating change of state"},"。"],"en":"No, let’s study together. We’ll be done with it no time.","p":"bu4hui4 ，wo3men5 yi1kuai4r5 fu4xi2 。yi1xia4zi5 jiu4 du2 wan2 le5 。","t":"不會，我們一塊兒復習。一下子就讀完了。","s":"不会，我们一块儿复习。一下子就读完了。"},{"display_order":8,"speaker":"B","row_2":"Then let’s go to the library in a bit.","audio":"mp3/64/chinesepod_8204_dialogue_78718_prototype_1574907651.mp3","v3_id":"4264","vocabulary":[{"s":"那","t":"那","p":"na4","en":"then (in that case)"},{"s":"我们","t":"我們","p":"wo3men5","en":"we"},{"s":"一会儿","t":"一會兒","p":"yi1hui4r","en":"later"},{"s":"去","t":"去","p":"qu4","en":"to go"},{"s":"图书馆","t":"圖書館","p":"tu2shu1guan3","en":"library"},{"s":"吧","t":"吧","p":"ba5","en":"(modal particle indicating suggestion or surmise)"}],"sentence":[{"s":"那","t":"那","p":"na4","en":"then (in that case)"},{"s":"我们","t":"我們","p":"wo3men5","en":"we"},{"s":"一会儿","t":"一會兒","p":"yi1hui4r","en":"later"},{"s":"去","t":"去","p":"qu4","en":"to go"},{"s":"图书馆","t":"圖書館","p":"tu2shu1guan3","en":"library"},{"s":"吧","t":"吧","p":"ba5","en":"(modal particle indicating suggestion or surmise)"},"！"],"en":"Then let’s go to the library in a bit.","p":"na4 wo3men5 yi1hui4r qu4 tu2shu1guan3 ba5 ！","t":"那我們一會兒去圖書館吧！","s":"那我们一会儿去图书馆吧！"}]}
                    // this.vocab = [{"id":15120830,"s":"开始","t":"開始","p":"kāishǐ","en":"to begin","audio":"mp3/glossary/source/chinesepod_8204_vocabulary_120055_prototype_1574403122.mp3","vocabulary_class":"Key Vocabulary"},{"id":15120829,"s":"读书","t":"讀書","p":"dúshū","en":"to study","audio":"mp3/glossary/source/chinesepod_8204_vocabulary_120056_prototype_1574403147.mp3","vocabulary_class":"Key Vocabulary"},{"id":15120827,"s":"一页","t":"一頁","p":"yīyè","en":"one page","audio":"mp3/glossary/source/chinesepod_8204_vocabulary_120057_prototype_1574403160.mp3","vocabulary_class":"Key Vocabulary"},{"id":15120828,"s":"一星期","t":"一星期","p":"yīxīngqī","en":"one week","audio":"mp3/glossary/source/chinesepod_8204_vocabulary_120058_prototype_1574403168.mp3","vocabulary_class":"Key Vocabulary"},{"id":15120826,"s":"一定","t":"一定","p":"yīdìng","en":"surely","audio":"mp3/glossary/source/chinesepod_8204_vocabulary_120059_prototype_1574403179.mp3","vocabulary_class":"Key Vocabulary"},{"id":15120825,"s":"一块儿","t":"一塊兒","p":"yīkuàir5","en":"together","audio":"mp3/glossary/source/chinesepod_8204_vocabulary_120060_prototype_1574403187.mp3","vocabulary_class":"Key Vocabulary"},{"id":15120824,"s":"复习","t":"復習","p":"fùxí","en":"to review","audio":"mp3/glossary/source/chinesepod_8204_vocabulary_120061_prototype_1574403197.mp3","vocabulary_class":"Key Vocabulary"},{"id":15120823,"s":"一下子","t":"一下子","p":"yīxiàzi","en":"in a short while","audio":"mp3/glossary/source/chinesepod_8204_vocabulary_120062_prototype_1574403226.mp3","vocabulary_class":"Key Vocabulary"},{"id":15120822,"s":"一会儿","t":"一會兒","p":"yīhuìr5","en":"later","audio":"mp3/glossary/source/chinesepod_8204_vocabulary_120063_prototype_1574403244.mp3","vocabulary_class":"Key Vocabulary"},{"id":15120821,"s":"图书馆","t":"圖書館","p":"túshūguǎn","en":"library","audio":"mp3/glossary/source/chinesepod_8204_vocabulary_120064_prototype_1574403254.mp3","vocabulary_class":"Key Vocabulary"},{"id":15120820,"s":"一下","t":"一下","p":"yīxià","en":"a bit","audio":"mp3/glossary/source/chinesepod_8204_vocabulary_120065_prototype_1574403260.mp3","vocabulary_class":"Supplementary"},{"id":15120818,"s":"一次","t":"一次","p":"yīcì","en":"one time","audio":"mp3/glossary/source/chinesepod_8204_vocabulary_120066_prototype_1574403268.mp3","vocabulary_class":"Supplementary"},{"id":15120819,"s":"下一次","t":"下一次","p":"xiàyīcì","en":"next time","audio":"mp3/glossary/source/chinesepod_8204_vocabulary_120067_prototype_1574403276.mp3","vocabulary_class":"Supplementary"},{"id":15120817,"s":"一片","t":"一片","p":"yīpiàn","en":"a piece of","audio":"mp3/glossary/source/chinesepod_8204_vocabulary_120068_prototype_1574403306.mp3","vocabulary_class":"Supplementary"},{"id":15120816,"s":"一块","t":"一塊","p":"yīkuài","en":"a chunk of","audio":"mp3/glossary/source/chinesepod_8204_vocabulary_120069_prototype_1574403313.mp3","vocabulary_class":"Supplementary"},{"id":15120815,"s":"一周","t":"一週","p":"yīzhōu","en":"a week","audio":"mp3/glossary/source/chinesepod_8204_vocabulary_120070_prototype_1574403325.mp3","vocabulary_class":"Supplementary"},{"id":15120814,"s":"一年","t":"一年","p":"yīnián","en":"a year","audio":"mp3/glossary/source/chinesepod_8204_vocabulary_120071_prototype_1574403333.mp3","vocabulary_class":"Supplementary"},{"id":15120813,"s":"一小时","t":"一小時","p":"yīxiǎoshí","en":"an hour","audio":"mp3/glossary/source/chinesepod_8204_vocabulary_120072_prototype_1574403342.mp3","vocabulary_class":"Supplementary"},{"id":15120812,"s":"一分钟","t":"一分鐘","p":"yīfēnzhōng","en":"a minute","audio":"mp3/glossary/source/chinesepod_8204_vocabulary_120073_prototype_1574403350.mp3","vocabulary_class":"Supplementary"},{"id":15120811,"s":"一秒","t":"一秒","p":"yīmiǎo","en":"a second","audio":"mp3/glossary/source/chinesepod_8204_vocabulary_120074_prototype_1574403358.mp3","vocabulary_class":"Supplementary"},{"id":15120810,"s":"一样","t":"一樣","p":"yīyàng","en":"same","audio":"mp3/glossary/source/chinesepod_8204_vocabulary_120075_prototype_1574403386.mp3","vocabulary_class":"Supplementary"},{"id":15120809,"s":"一起","t":"一起","p":"yīqǐ","en":"together","audio":"mp3/glossary/source/chinesepod_8204_vocabulary_120076_prototype_1574403394.mp3","vocabulary_class":"Supplementary"}]
                    // this.questions = {"matching":[{"id":117872,"scope":"4264","score":5,"type_id":1,"status":1,"question":{"segments":[{"id":5,"s":"一分钟","t":"一分鐘","p":"yīfēnzhōng","e":"a minute"},{"id":4,"s":"一秒","t":"一秒","p":"yīmiǎo","e":"a second"},{"id":2,"s":"一下子","t":"一下子","p":"yīxiàzi","e":"in a short while"},{"id":1,"s":"一起","t":"一起","p":"yīqǐ","e":"together"},{"id":3,"s":"一定","t":"一定","p":"yīdìng","e":"surely"}]},"createdAt":"2019-11-28T07:53:11.000Z"},{"id":117873,"scope":"4264","score":5,"type_id":1,"status":1,"question":{"segments":[{"id":1,"s":"图书馆","t":"圖書館","p":"túshūguǎn","e":"library"},{"id":5,"s":"一周","t":"一週","p":"yīzhōu","e":"a week"},{"id":4,"s":"读书","t":"讀書","p":"dúshū","e":"to study"},{"id":3,"s":"一星期","t":"一星期","p":"yīxīngqī","e":"one week"},{"id":2,"s":"开始","t":"開始","p":"kāishǐ","e":"to begin"}]},"createdAt":"2019-11-28T07:53:11.000Z"},{"id":117874,"scope":"4264","score":5,"type_id":1,"status":1,"question":{"segments":[{"id":5,"s":"一会儿","t":"一會兒","p":"yīhuìr5","e":"later"},{"id":2,"s":"一片","t":"一片","p":"yīpiàn","e":"a piece of"},{"id":4,"s":"一样","t":"一樣","p":"yīyàng","e":"same"},{"id":1,"s":"下一次","t":"下一次","p":"xiàyīcì","e":"next time"},{"id":3,"s":"一块","t":"一塊","p":"yīkuài","e":"a chunk of"}]},"createdAt":"2019-11-28T07:53:11.000Z"}],"audio":[{"id":117876,"scope":"4264","score":1,"type_id":4,"status":1,"question":{"audio":"http://s3.amazonaws.com/chinesepod.com/4264/62e07d9a8f18940e3af54092b7fd830cbec587f2/mp3/64/chinesepod_8204_expansion_105662_prototype_1574403653.mp3"},"answer":{"s":"我等了一会儿，公车就来了。","t":"我等了一會兒，公車就來了。","p":"wǒ děng le yīhuìr5,gōngchē jiù lái le.","e":"I only waited for a while and then the bus came."},"createdAt":"2019-11-28T07:53:12.000Z"},{"id":117877,"scope":"4264","score":1,"type_id":4,"status":1,"question":{"audio":"http://s3.amazonaws.com/chinesepod.com/4264/62e07d9a8f18940e3af54092b7fd830cbec587f2/mp3/64/chinesepod_8204_expansion_105661_prototype_1574403625.mp3"},"answer":{"s":"我一会儿要吃布丁，你要吗？","t":"我一會兒要吃布丁，你要嗎？","p":"wǒ yīhuìr yào chī bùdīng,nǐ yào ma?","e":"I am eating pudding in a moment. Do you want one?"},"createdAt":"2019-11-28T07:53:12.000Z"},{"id":117878,"scope":"4264","score":1,"type_id":4,"status":1,"question":{"audio":"http://s3.amazonaws.com/chinesepod.com/4264/62e07d9a8f18940e3af54092b7fd830cbec587f2/mp3/64/chinesepod_8204_expansion_105656_prototype_1574403532.mp3"},"answer":{"s":"明天不一定会下雨。","t":"明天不一定會下雨。","p":"míngtiān bù yīdìng huì xiàyǔ.","e":"It might not rain tomorrow."},"createdAt":"2019-11-28T07:53:12.000Z"}],"choice":[{"id":117879,"scope":"4264","score":1,"type_id":5,"status":1,"question":{"s":"他_____是日本人！","t":"他_____是日本人！","p":"tā _____ shì Rìběn rén!","choices":[{"id":1,"s":"一星期","t":"一星期","p":"yīxīngqī","e":"one week"},{"id":3,"s":"一块","t":"一塊","p":"yīkuài","e":"a chunk of"},{"id":2,"s":"一定","t":"一定","p":"yīdìng","e":"surely"},{"id":4,"s":"一样","t":"一樣","p":"yīyàng","e":"same"}]},"answer":{"id":2,"s":"他一定是日本人！","t":"他一定是日本人！","p":"tā yīdìng shì Rìběn rén!","e":"He is surely a Japanese."},"createdAt":"2019-11-28T07:53:12.000Z"},{"id":117880,"scope":"4264","score":1,"type_id":5,"status":1,"question":{"s":"你多睡_____吧。","t":"你多睡_____吧。","p":"nǐ duō shuì _____ ba.","choices":[{"id":1,"s":"一会儿","t":"一會兒","p":"yīhuìr5","e":"later"},{"id":4,"s":"一星期","t":"一星期","p":"yīxīngqī","e":"one week"},{"id":5,"s":"复习","t":"復習","p":"fùxí","e":"to review"},{"id":3,"s":"开始","t":"開始","p":"kāishǐ","e":"to begin"}]},"answer":{"id":1,"s":"你多睡一会儿吧。","t":"你多睡一會兒吧。","p":"nǐ duō shuì yīhuìr5 ba.","e":"Sleep more."},"createdAt":"2019-11-28T07:53:12.000Z"},{"id":117881,"scope":"4264","score":1,"type_id":5,"status":1,"question":{"s":"明天不_____会下雨。","t":"明天不_____會下雨。","p":"míngtiān bù _____ huì xiàyǔ.","choices":[{"id":1,"s":"一周","t":"一週","p":"yīzhōu","e":"a week"},{"id":2,"s":"一定","t":"一定","p":"yīdìng","e":"surely"},{"id":3,"s":"一块","t":"一塊","p":"yīkuài","e":"a chunk of"},{"id":5,"s":"一次","t":"一次","p":"yīcì","e":"one time"}]},"answer":{"id":2,"s":"明天不一定会下雨。","t":"明天不一定會下雨。","p":"míngtiān bù yīdìng huì xiàyǔ.","e":"It might not rain tomorrow."},"createdAt":"2019-11-28T07:53:12.000Z"},{"id":117882,"scope":"4264","score":1,"type_id":5,"status":1,"question":{"s":"他_____就睡着了。","t":"他_____就睡著了。","p":"tā _____ jiù shuìzháo le.","choices":[{"id":3,"s":"一分钟","t":"一分鐘","p":"yīfēnzhōng","e":"a minute"},{"id":2,"s":"一下子","t":"一下子","p":"yīxiàzi","e":"in a short while"},{"id":5,"s":"一星期","t":"一星期","p":"yīxīngqī","e":"one week"},{"id":1,"s":"一下","t":"一下","p":"yīxià","e":"a bit"}]},"answer":{"id":2,"s":"他一下子就睡着了。","t":"他一下子就睡著了。","p":"tā yīxiàzi jiù shuìzháo le.","e":"He fell asleep right away."},"createdAt":"2019-11-28T07:53:12.000Z"},{"id":117883,"scope":"4264","score":1,"type_id":5,"status":1,"question":{"s":"我_____要吃布丁，你要吗？","t":"我_____要吃布丁，你要嗎？","p":"wǒ yīhuìr yào chī bùdīng,nǐ yào ma?","choices":[{"id":2,"s":"一会儿","t":"一會兒","p":"yīhuìr5","e":"later"},{"id":4,"s":"一下","t":"一下","p":"yīxià","e":"a bit"},{"id":5,"s":"下一次","t":"下一次","p":"xiàyīcì","e":"next time"},{"id":1,"s":"一秒","t":"一秒","p":"yīmiǎo","e":"a second"}]},"answer":{"id":2,"s":"我一会儿要吃布丁，你要吗？","t":"我一會兒要吃布丁，你要嗎？","p":"wǒ yīhuìr yào chī bùdīng,nǐ yào ma?","e":"I am eating pudding in a moment. Do you want one?"},"createdAt":"2019-11-28T07:53:12.000Z"}],"rearrange":[{"id":117875,"scope":"4264","score":5,"type_id":2,"status":1,"question":{"segments":[{"s":"十一号就要考试了。开始读书了吗？","t":"十一號就要考試了。開始讀書了嗎？","p":"shíyī hào jiù yào kǎoshì le.kāishǐ dúshū le ma?","e":"We are having an exam on the 11th. Have you started studying yet?","id":1},{"s":"唉...我只读了一页。","t":"唉...我只讀了一頁。","p":"āi ...wǒ zhǐ dú le yī yè.","e":"I only read one page.","id":2},{"s":"没事儿，你还有一星期呢！","t":"沒事兒，你還有一星期呢！","p":"méishìr5,nǐ háiyǒu yī xīngqī ne!","e":"No problem. You still have a week.","id":3},{"s":"一定来不及的。","t":"一定來不及的。","p":"yīdìng láibují de.","e":"I definitely won’t make it.","id":4},{"s":"不会，我们一块儿复习。一下子就读完了。","t":"不會，我們一塊兒復習。一下子就讀完了。","p":"bùhuì,wǒmen yīkuàir5 fùxí.yīxiàzi jiù dú wán le.","e":"No, let’s study together. We’ll be done with it no time.","id":5},{"s":"那我们一会儿去图书馆吧！","t":"那我們一會兒去圖書館吧！","p":"nà wǒmen yīhuìr qù túshūguǎn ba!","e":"Then let’s go to the library in a bit.","id":6}]},"createdAt":"2019-11-28T07:53:11.000Z"}]}
                    // this.expansion = [{"phrase":"一定","examples":[{"id":287113,"vocabulary":"一定","audio":"mp3/64/chinesepod_8204_expansion_105655_prototype_1574403507.mp3","sentence":[{"s":"我","t":"我","p":"wo3","en":"I"},{"s":"这","t":"這","p":"zhe4","en":"this"},{"s":"次","t":"次","p":"ci4","en":"classifier for events"},{"s":"一定","t":"一定","p":"yi1ding4","en":"surely"},{"s":"会","t":"會","p":"hui4","en":"will"},{"s":"赢","t":"贏","p":"ying2","en":"to win"},"！"],"target":"This time I will definitely win!","en":"This time I will definitely win!","p":"wo3 zhe4 ci4 yi1ding4 hui4 ying2 ！","s":"我这次一定会赢！","t":"我這次一定會贏！"},{"id":287114,"vocabulary":"一定","audio":"mp3/64/chinesepod_8204_expansion_105656_prototype_1574403532.mp3","sentence":[{"s":"明天","t":"明天","p":"ming2tian1","en":"tomorrow"},{"s":"不","t":"不","p":"bu4","en":"not"},{"s":"一定","t":"一定","p":"yi1ding4","en":"surely"},{"s":"会","t":"會","p":"hui4","en":"to be likely to"},{"s":"下雨","t":"下雨","p":"xia4yu3","en":"to rain"},"。"],"target":"It might not rain tomorrow.","en":"It might not rain tomorrow.","p":"ming2tian1 bu4 yi1ding4 hui4 xia4yu3 。","s":"明天不一定会下雨。","t":"明天不一定會下雨。"},{"id":287115,"vocabulary":"一定","audio":"mp3/64/chinesepod_8204_expansion_105657_prototype_1574403559.mp3","sentence":[{"s":"他","t":"他","p":"ta1","en":"he"},{"s":"一定","t":"一定","p":"yi1ding4","en":"surely"},{"s":"是","t":"是","p":"shi4","en":"to be"},{"s":"日本","t":"日本","p":"Ri4ben3","en":"Japan"},{"s":"人","t":"人","p":"ren2","en":"people"},"！"],"target":"He is surely a Japanese.","en":"He is surely a Japanese.","p":"ta1 yi1ding4 shi4 Ri4ben3 ren2 ！","s":"他一定是日本人！","t":"他一定是日本人！"}]},{"phrase":"一下子","examples":[{"id":287116,"vocabulary":"一下子","audio":"mp3/64/chinesepod_8204_expansion_105660_prototype_1574403600.mp3","sentence":[{"s":"电影票","t":"電影票","p":"dian4ying3piao4","en":"cinema ticket"},{"s":"一下子","t":"一下子","p":"yi1xia4zi5","en":"in a short while"},{"s":"就","t":"就","p":"jiu4","en":"just"},{"s":"卖完","t":"賣完","p":"mai4wan2","en":"to be sold out"},{"s":"了","t":"了","p":"le5","en":"particle indicating change of state"},"。"],"target":"The movie tickets were sold out in no time.","en":"The movie tickets were sold out in no time.","p":"dian4ying3piao4 yi1xia4zi5 jiu4 mai4wan2 le5 。","s":"电影票一下子就卖完了。","t":"電影票一下子就賣完了。"},{"id":287117,"vocabulary":"一下子","audio":"mp3/64/chinesepod_8204_expansion_105659_prototype_1574403585.mp3","sentence":[{"s":"他","t":"他","p":"ta1","en":"he"},{"s":"一下子","t":"一下子","p":"yi1xia4zi5","en":"in a short while"},{"s":"就","t":"就","p":"jiu4","en":"just"},{"s":"睡着","t":"睡著","p":"shui4zhao2","en":"to fall asleep"},{"s":"了","t":"了","p":"le5","en":"particle indicating change of state"},"。"],"target":"He fell asleep right away.","en":"He fell asleep right away.","p":"ta1 yi1xia4zi5 jiu4 shui4zhao2 le5 。","s":"他一下子就睡着了。","t":"他一下子就睡著了。"},{"id":287118,"vocabulary":"一下子","audio":"mp3/64/chinesepod_8204_expansion_105658_prototype_1574403575.mp3","sentence":[{"s":"她","t":"她","p":"ta1","en":"she"},{"s":"一下子","t":"一下子","p":"yi1xia4zi5","en":"all at once"},{"s":"说","t":"說","p":"shuo1","en":"to say"},{"s":"好","t":"好","p":"hao3","en":"ok"},"，",{"s":"一下子","t":"一下子","p":"yi1xia4zi5","en":"all at once"},{"s":"说","t":"說","p":"shuo1","en":"to say"},{"s":"不","t":"不","p":"bu4","en":"not"},{"s":"好","t":"好","p":"hao3","en":"ok"},"。"],"target":"One minute she says yes, and the next she says no.","en":"One minute she says yes, and the next she says no.","p":"ta1 yi1xia4zi5 shuo1 hao3 ，yi1xia4zi5 shuo1 bu4 hao3 。","s":"她一下子说好，一下子说不好。","t":"她一下子說好，一下子說不好。"}]},{"phrase":"一会儿","examples":[{"id":287119,"vocabulary":"一会儿","audio":"mp3/64/chinesepod_8204_expansion_105663_prototype_1574403672.mp3","sentence":[{"s":"你","t":"你","p":"ni3","en":"you"},{"s":"多","t":"多","p":"duo1","en":"more"},{"s":"睡","t":"睡","p":"shui4","en":"to sleep"},{"s":"一会儿","t":"一會兒","p":"yi1hui4r5","en":"a while"},{"s":"吧","t":"吧","p":"ba5","en":"(modal particle indicating suggestion or surmise)"},"。"],"target":"Sleep more.","en":"Sleep more.","p":"ni3 duo1 shui4 yi1hui4r5 ba5 。","s":"你多睡一会儿吧。","t":"你多睡一會兒吧。"},{"id":287120,"vocabulary":"一会儿","audio":"mp3/64/chinesepod_8204_expansion_105662_prototype_1574403653.mp3","sentence":[{"s":"我","t":"我","p":"wo3","en":"I"},{"s":"等","t":"等","p":"deng3","en":"to wait"},{"s":"了","t":"了","p":"le5","en":"particle indicating change of state, action complete or emphasis"},{"s":"一会儿","t":"一會兒","p":"yi1hui4r5","en":"a while"},"，",{"s":"公车","t":"公車","p":"gong1che1","en":"bus"},{"s":"就","t":"就","p":"jiu4","en":"then"},{"s":"来","t":"來","p":"lai2","en":"to come"},{"s":"了","t":"了","p":"le5","en":"particle indicating change of state"},"。"],"target":"I only waited for a while and then the bus came.","en":"I only waited for a while and then the bus came.","p":"wo3 deng3 le5 yi1hui4r5 ，gong1che1 jiu4 lai2 le5 。","s":"我等了一会儿，公车就来了。","t":"我等了一會兒，公車就來了。"},{"id":287121,"vocabulary":"一会儿","audio":"mp3/64/chinesepod_8204_expansion_105661_prototype_1574403625.mp3","sentence":[{"s":"我","t":"我","p":"wo3","en":"I"},{"s":"一会儿","t":"一會兒","p":"yi1hui4r","en":"later"},{"s":"要","t":"要","p":"yao4","en":"want to; going to"},{"s":"吃","t":"吃","p":"chi1","en":"eat"},{"s":"布丁","t":"布丁","p":"bu4ding1","en":"pudding (loanword)"},"，",{"s":"你","t":"你","p":"ni3","en":"you"},{"s":"要","t":"要","p":"yao4","en":"want"},{"s":"吗","t":"嗎","p":"ma5","en":"indicates a yes-no question (added to a statement)"},"？"],"target":"I am eating pudding in a moment. Do you want one?","en":"I am eating pudding in a moment. Do you want one?","p":"wo3 yi1hui4r yao4 chi1 bu4ding1 ，ni3 yao4 ma5 ？","s":"我一会儿要吃布丁，你要吗？","t":"我一會兒要吃布丁，你要嗎？"}]}]
                    // this.grammar = []
                    // this.downloads = {"type":"premium","downloads":{"video":"https://d3glhinmyc42ep.cloudfront.net/c10128e0-66f5-47a7-83bc-f30024535004/mp4/jwt87gcaj3_Mp4_Avc_Aac_16x9_1920x1080p_24Hz_8.5Mbps_qvbr.mp4","lesson":"https://s3.amazonaws.com/chinesepod.com/4264/62e07d9a8f18940e3af54092b7fd830cbec587f2/mp3/chinesepod_B4264pr.mp3","dialogue":"https://s3.amazonaws.com/chinesepod.com/4264/62e07d9a8f18940e3af54092b7fd830cbec587f2/mp3/chinesepod_B4264dg.mp3","review":"https://s3.amazonaws.com/chinesepod.com/4264/62e07d9a8f18940e3af54092b7fd830cbec587f2/mp3/chinesepod_B4264rv.mp3","pdf1":"https://s3.amazonaws.com/chinesepod.com/4264/62e07d9a8f18940e3af54092b7fd830cbec587f2/pdf/chinesepod_B4264.pdf","pdf2":"https://s3.amazonaws.com/chinesepod.com/4264/62e07d9a8f18940e3af54092b7fd830cbec587f2/pdf/chinesepod_B4264trad.pdf"}}
                    // this.comments = {"count":11,"comments":[{"id":292885,"content":"<p>Hi ! Is there a difference between yixiazi and yihuir please ?</p>","reply_to_id":0,"reply_to_id_2":0,"reply_to_user_id":0,"comment_from":0,"created_at":"2020-07-21T07:10:08.000Z","user_id":1123684,"username":"g0d_spe3d","avatar_url":null,"nestedComments":[{"id":292898,"content":"<p>That's a very good question.I would say both imply a short period of time, but there is a slight difference. Comparing to 一会儿, 一下子 is a shorter time duration and the action is expected to be done immediately. </p>","reply_to_id":292885,"reply_to_id_2":0,"reply_to_user_id":1123684,"comment_from":0,"created_at":"2020-07-21T13:44:43.000Z","user_id":1109209,"username":"JoshuaFan","avatar_url":"https://chinesepod-user-profiles.s3.amazonaws.com/profiles/1109209/image.jpg"}]},{"id":292455,"content":"<p>Hello, can you explain to me why sometimes the first tone becomes a second  一样 and sometimes no  一页?  Thank you</p>","reply_to_id":0,"reply_to_id_2":0,"reply_to_user_id":0,"comment_from":0,"created_at":"2020-05-25T19:11:31.000Z","user_id":1115553,"username":"lannoyj24","avatar_url":"","nestedComments":[{"id":292458,"content":"<p>When the second word is the fourth tone, the first 一 becomes the second tone. For example, you mentioned 一页ye4 一样yang4 一块kuai4. Check out this lesson <a href=\"https://www.chinesepod.com/lesson/tone-change-series-2-%E4%B8%80-yi\" rel=\"noopener noreferrer nofollow\">https://www.chinesepod.com/lesson/tone-change-series-2-%E4%B8%80-yi</a> and this lesson <a href=\"https://www.chinesepod.com/lesson/tone-change-rule-yi-%E4%B8%80\" rel=\"noopener noreferrer nofollow\">https://www.chinesepod.com/lesson/tone-change-rule-yi-%E4%B8%80</a> for more information on tone change of the character \"一\".</p>","reply_to_id":292455,"reply_to_id_2":0,"reply_to_user_id":1115553,"comment_from":0,"created_at":"2020-05-26T11:31:23.000Z","user_id":1109209,"username":"JoshuaFan","avatar_url":"https://chinesepod-user-profiles.s3.amazonaws.com/profiles/1109209/image.jpg"}]},{"id":290783,"content":"<p>We can say \"开始学习了\" instead of \"开始读书了\", isn't it?</p>","reply_to_id":0,"reply_to_id_2":0,"reply_to_user_id":0,"comment_from":0,"created_at":"2019-11-29T15:59:43.000Z","user_id":1073986,"username":"Jeremypu2019","avatar_url":"","nestedComments":[{"id":290785,"content":"<p><p>学习 is to learn, and 读书 is to read books or to study. So, yes, you can say 学习 comes with 读书, they are similar terms.&nbsp;</p></p>","reply_to_id":290783,"reply_to_id_2":0,"reply_to_user_id":1073986,"comment_from":0,"created_at":"2019-11-29T23:03:33.000Z","user_id":1068458,"username":"anonymous1068458","avatar_url":"https://chinesepod-user-profiles.s3.amazonaws.com/profiles/1068458/image.jpg"}]},{"id":290779,"content":"<p>good morning; thanks for your efforts to keep up with new lessons.</p>\n\n<p>This does not regard the lessons,</p>\n<p>but I am unable to contact you since last week</p>\n<p>( sent several emails and called on the phone, but nothing expect some machine replies).</p>\n<p>it regard my annual subscription; gzevola@hotmail.com</p>\n<p>thanks for your concern</p>\n<p>Giovanni</p>","reply_to_id":0,"reply_to_id_2":0,"reply_to_user_id":0,"comment_from":0,"created_at":"2019-11-29T08:01:45.000Z","user_id":649858,"username":"gzevola","avatar_url":"","nestedComments":[{"id":290781,"content":"<p>Hi Giovanni,</p><p>I'm really sorry to hear that. I have forwarded your message to our Student Relation team, and I'll connect you with them right away. I assure you that this issue will be handled as soon as possible. Once again, I'm sorry for all the inconvenience caused. </p>","reply_to_id":290779,"reply_to_id_2":0,"reply_to_user_id":649858,"comment_from":0,"created_at":"2019-11-29T14:43:41.000Z","user_id":1050618,"username":"BeccaChu","avatar_url":"https://chinesepod-user-profiles.s3.amazonaws.com/profiles/1050618/image.jpg"},{"id":290782,"content":"<p><p>I will be waiting for their contact; thanks for your concern</p></p>","reply_to_id":290779,"reply_to_id_2":290781,"reply_to_user_id":1050618,"comment_from":0,"created_at":"2019-11-29T14:07:39.000Z","user_id":649858,"username":"gzevola","avatar_url":""},{"id":290803,"content":"<p><p>greetings</p></p>\r\n<p><p>sorry to bother you but it is now the second week that you keep sending me automatic reply&hellip;when will someone reply to my inquire regarding the annual subscription?</p></p>\r\n<p><p>Giovanni</p></p>","reply_to_id":290779,"reply_to_id_2":0,"reply_to_user_id":649858,"comment_from":0,"created_at":"2019-12-02T06:30:15.000Z","user_id":649858,"username":"gzevola","avatar_url":""},{"id":290815,"content":"<p>Hi Giovanni,</p><p>I have connected you with our Student Relations Team via email last Friday. I'm sorry if they have not responded to you yet. May I know whom you are getting the automatic replies from? </p>","reply_to_id":290779,"reply_to_id_2":290803,"reply_to_user_id":649858,"comment_from":0,"created_at":"2019-12-02T22:09:17.000Z","user_id":1050618,"username":"BeccaChu","avatar_url":"https://chinesepod-user-profiles.s3.amazonaws.com/profiles/1050618/image.jpg"}]}]}
                    // this.decks = [{"id":169153,"tag":"Asking Height and Weight 2","public":0,"user_id":1197231,"count":0,"forReview":0},{"id":169152,"tag":"Asking Height and Weight","public":0,"user_id":1197231,"count":0,"forReview":0},{"id":167572,"tag":"Uncategorized","public":0,"user_id":1197231,"count":25,"forReview":25}]

                    // console.log(this.questions);
                    let toggle_show_hide = document.querySelectorAll('.toggle-show-hide');

                    toggle_show_hide.forEach((toggle, i) => {
                        let isTranslationTextHidden = true;
                        toggle.onclick = () => {
                            let spanToHide = toggle.parentNode.querySelectorAll('span')[0];
                            let spanToShow = toggle.parentNode.querySelectorAll('span')[1];

                            if (isTranslationTextHidden) {
                                isTranslationTextHidden = false;

                                spanToShow.style.display = 'block';
                                spanToHide.style.display = 'none';

                                toggle.innerHTML = '<i class="bi bi-eye-fill"></i>';
                            } else {
                                isTranslationTextHidden = true;

                                spanToShow.style.display = 'none';
                                spanToHide.style.display = 'block';

                                toggle.innerHTML = '<i class="bi bi-eye-slash-fill"></i>';
                            }
                        }
                    });

                    // ## play audio in DIALOGUE tab
                    let play_audio = document.querySelectorAll('.play-audio');

                    play_audio.forEach((audio, i) => {
                        audio.onclick = () => {
                            this.audio_player = audio.querySelector('audio');
                            // audio_player.play();
                            audio.classList.add('emit-audio');

                            this.audio_player.onended = () => {
                                audio.classList.remove('emit-audio');
                            }

                            let icon = audio.querySelector('i');
                            if (this.audio_player.duration > 0 && !this.audio_player.paused) {
                                this.audio_player.pause();
                                if (icon){
                                    icon.classList.add('flaticon-013-play')
                                    icon.classList.remove('flaticon-013-pause')
                                } 
                            } else {
                                if (icon){
                                    icon.classList.add('flaticon-013-pause')
                                    icon.classList.remove('flaticon-013-play')
                                } 
                                this.audio_player.play();
                            }
                        }
                    });

                    if (this.dialogue) {
                        for (let i=0; i < this.dialogue.dialogue.length; i++) {
                            let d = this.dialogue.dialogue[i]

                            let sentence=[];
                            
                            if(d.sentence)
                            for (let i=0; i < d.sentence.length; i++) {
                                let characters = d.sentence[i]

                                if (characters.s && characters.s.length > 1 && isNaN(characters.s)) {
                                    for(let ndx=0; ndx < characters.s.length; ndx++) {
                                        let hanziLookup = await this.getAPIFetch('/beta/api/v1/lookup-hanzi/'+characters.s[ndx])
                                        sentence.push({
                                            en:hanziLookup.definition,
                                            p:hanziLookup.pinyin,
                                            s:hanziLookup.simplified,
                                            t:hanziLookup.traditional,
                                        })
                                    }
                                   

                                } else {
                                    sentence.push(characters)
                                }
                            }

                            this.dialogue.dialogue[i].sentence = sentence
                        }
                    }

                    if (this.expansion) {
                        for (let ndxExp=0; ndxExp < this.expansion.length; ndxExp++) {
                            let e = this.expansion[ndxExp]

                            if(e.examples)
                            for (let ndxEx=0; ndxEx < e.examples.length; ndxEx++) {
                                let example = e.examples[ndxEx]
                                let expansionSentence=[];

                                for (let ndxs=0; ndxs < example.sentence.length; ndxs++) {
                                    let sentence = example.sentence[ndxs]

                                    if (sentence.s && sentence.s.length > 1 && isNaN(sentence.s)) {
                                        for(let ndx=0; ndx < sentence.s.length; ndx++) {
                                            let hanziLookup = await this.getAPIFetch('/beta/api/v1/lookup-hanzi/'+sentence.s[ndx])
                                            expansionSentence.push({
                                                en:hanziLookup.definition,
                                                p:hanziLookup.pinyin,
                                                s:hanziLookup.simplified,
                                                t:hanziLookup.traditional,
                                            })
                                        }
                                    

                                    } else {
                                        expansionSentence.push(sentence)
                                    }
                                }

                                this.expansion[ndxExp].examples[ndxEx].sentence = expansionSentence
                            }

                        }
                    }

                    if (this.grammar) {
                        for (let gNdx=0; gNdx < this.grammar.length; gNdx++) {
                            let e = this.grammar[gNdx]

                            if(e.examples)
                            for (let eNdx=0; eNdx < e.examples.length; eNdx++) {
                                let example = e.examples[eNdx]
                                let grammarSentence=[];

                                for (let sNdx=0; sNdx < example.sentence.length; sNdx++) {
                                    let sentence = example.sentence[sNdx]

                                    if (sentence.s && sentence.s.length > 1 && isNaN(sentence.s)) {
                                        for(let ndx=0; ndx < sentence.s.length; ndx++) {
                                            let hanziLookup = await this.getAPIFetch('/beta/api/v1/lookup-hanzi/'+sentence.s[ndx])
                                            grammarSentence.push({
                                                en:hanziLookup.definition,
                                                p:hanziLookup.pinyin,
                                                s:hanziLookup.simplified,
                                                t:hanziLookup.traditional,
                                            })
                                        }
                                    

                                    } else {
                                        grammarSentence.push(sentence)
                                    }
                                // })
                                }

                                this.grammar[gNdx].examples[eNdx].sentence = grammarSentence
                            }

                            
                        }
                    }

                } else {
                    console.log("lesson not found");
                    window.location = "/login";
                }
            },

            

        

            mountVideo: async function() {
            // if (this.lessonData && this.lessonData.sources) {
                this.isActive = 'video';

                const video = document.querySelector('#videoplyr-s3');
                this.hlsNativeSupport =
                video && video.canPlayType('application/vnd.apple.mpegURL');

                let sampleLinks = {
                    "4279":	"https://d2arcxjkuir81y.cloudfront.net/4279.upperintermediate.workplaceculture.%E4%B8%AD%E5%9B%BD%E7%9A%84%E8%81%8C%E5%9C%BA%E6%96%87%E5%8C%96.expatsinchina.simp.m3u8",
                    "4169":	"https://d2arcxjkuir81y.cloudfront.net/4169.pre-int.metoo!4waystouse.y%C4%9B%E4%B9%9F.simp-test.m3u8",
                    "4195":	"https://d2arcxjkuir81y.cloudfront.net/4195.newbie.tonechangeseries01%E4%B8%8Dno.simp-test270.m3u8",
                    "4196":	"https://d2arcxjkuir81y.cloudfront.net/4196.newbie.tonechangeseries2%E4%B8%80one.simp-test.m3u8",
                    "4198":	"https://d2arcxjkuir81y.cloudfront.net/4198.elementary.charactermindmap.heart%E5%BF%83.simp-test.m3u8",
                    "4203":	"https://d2arcxjkuir81y.cloudfront.net/4203.newbie.tonechangeseries3.%E5%A5%BDhao.simp.m3u8",
                    "4204":	"https://d2arcxjkuir81y.cloudfront.net/4204.pre-int.howtouse.d%C5%8Du%E9%83%BD.simp-test.m3u8",
                    "4206":	"https://d2arcxjkuir81y.cloudfront.net/4206.newbie.tonechangeseries4.%E4%BD%A0you.simp-test.m3u8",
                    "4207":	"https://d2arcxjkuir81y.cloudfront.net/4207.intermediate.chineseproverbs.everyexperienceisalesson.simp-test.m3u8",
                    "4208":	"https://d2arcxjkuir81y.cloudfront.net/4208.elementary.charactermindmap.%E6%89%93hit.simp-test.m3u8",
                    "4209":	"https://d2arcxjkuir81y.cloudfront.net/4209.intermediate.animalproverbs.muttononthemenu.simp-test.m3u8",
                    "4210":	"https://d2arcxjkuir81y.cloudfront.net/4210.pre-int.howtouse.ba%E5%90%A7.simp-test.m3u8",
                    "4224":	"https://d2arcxjkuir81y.cloudfront.net/4224.intermediate.animalproverbs.eatlikeadragonworklikeaworm.simp-1200kbps.m3u8",
                    "4225":	"https://d2arcxjkuir81y.cloudfront.net/4225.elementary.charactermindmap.%E5%85%B3close.simp-test_1.m3u8",
                    "4308":	"https://d2arcxjkuir81y.cloudfront.net/4308.upperint.%E5%AE%85%E7%BB%8F%E6%B5%8E%E7%9A%84%E5%8F%91%E5%B1%95fooddeliveryindustry.simp.m3u8",
                    "4549":	"https://d2arcxjkuir81y.cloudfront.net/4549.upperint.%E6%B8%85%E8%B0%88genderequality.simp.m3u8",
                };

                if (sampleLinks[this.lesson.id]) {
                    this.lesson.sources = {
                        hls: {simplified: sampleLinks[this.lesson.id]}

                    }
                }

                // console.log(this.lesson);

                if (this.lesson.sources.hls && this.hlsSupport) {
                    let source = this.lesson.sources.hls['simplified'];
                    // const source = "https://d2arcxjkuir81y.cloudfront.net/4279.upperintermediate.workplaceculture.%E4%B8%AD%E5%9B%BD%E7%9A%84%E8%81%8C%E5%9C%BA%E6%96%87%E5%8C%96.expatsinchina.simp.m3u8";

                    // if (this.lesson.id == '4279') {
                    //     console.log("load test!!!!!");
                    //     source = "https://d2arcxjkuir81y.cloudfront.net/4279.upperintermediate.workplaceculture.%E4%B8%AD%E5%9B%BD%E7%9A%84%E8%81%8C%E5%9C%BA%E6%96%87%E5%8C%96.expatsinchina.simp.m3u8";
                    // }

                    

                    // console.log(sampleLinks['4208'])
                    const defaultOptions = {};

                    const hls = new Hls();
                    hls.loadSource(source);

                    hls.on(Hls.Events.MANIFEST_PARSED, (event, data) => {
                        // Transform available levels into an array of integers (height values).
                        const availableQualities = hls.levels.map(l => l.height);

                        // Add new qualities to option
                        defaultOptions.quality = {
                        default: availableQualities[3],
                        options: [...availableQualities],
                        // this ensures Plyr to use Hls to update quality level
                        forced: true,
                        onChange: e => updateQuality(e)
                        };

                        this.videoplyr = new Plyr('#videoplyr-s3', defaultOptions);

                        this.videoplyr.on('ready', () => {
                            this.hidePlayer = false;
                            // this.floatingTogglePlayback();
                        });
                        this.videoplyr.on('timeupdate', event => {
                        if (window.hls.currentLevel > -1) {
                            this.videoplyr.quality =
                            availableQualities[window.hls.currentLevel];
                        }
                        // this.onTimeupdate(event);
                        });
                        // this.videoplyr.on('seeking', this.onSeeking);
                        // this.videoplyr.on('seeked', this.onSeeked);
                        // this.videoplyr.on('playing', this.onPlaying);
                        // this.videoplyr.on('pause', this.onPause);
                        // this.videoplyr.on('ended', this.handleFinished);
                        // this.videoplyr.on('stalled', console.log);
                        // this.videoplyr.on('canplay', console.log);
                        this.videoplyr.on('waiting', event => {
                        const startBuffer = this.videoplyr.buffered;
                        setTimeout(() => {
                            console.log('Player Buffering');
                            console.log({
                            startBuffer,
                            currentBuffer: this.videoplyr.buffered
                            });
                            if (startBuffer === this.videoplyr.buffered) {
                            setAutomaticQuality();
                            }
                        }, 20000);
                        });
                    });
                    hls.attachMedia(video);
                    window.hls = hls;

                    const updateQuality = newQuality => {
                        window.hls.levels.forEach((level, levelIndex) => {
                        if (level.height === newQuality) {
                            if (window.hls.currentLevel !== levelIndex) {
                            console.log('Found quality match with ' + newQuality);
                            window.hls.currentLevel = levelIndex;
                            }
                        }
                        });
                    };

                    function setAutomaticQuality() {
                        console.log('Current level: ' + window.hls.currentLevel);
                        window.hls.currentLevel = -1;
                        console.log('New level: ' + window.hls.currentLevel);
                    }

                    this.$gtag.event('select_content', {
                        event_category: 'engagement',
                        event_label: 's3-player'
                    }); 
                } else if (this.lesson.sources.hls && this.hlsNativeSupport) {
                    this.videoplyr = new Plyr('#videoplyr-s3');
                    this.videoplyr.on('ready', () => {
                        this.hidePlayer = false;
                        this.floatingTogglePlayback();
                    });
                    this.videoplyr.on('timeupdate', this.onTimeupdate);
                    this.videoplyr.on('seeking', this.onSeeking);
                    this.videoplyr.on('seeked', this.onSeeked);
                    this.videoplyr.on('playing', this.onPlaying);
                    this.videoplyr.on('pause', this.onPause);
                    this.videoplyr.on('ended', this.handleFinished);

                    this.$gtag.event('select_content', {
                        event_category: 'engagement',
                        event_label: 's3-player-native'
                    });
                // } else if (this.lessonData.sources.wistia) {
                // if (!window._wq) {
                //     let wistiaScript = document.createElement('script');
                //     wistiaScript.setAttribute(
                //     'src',
                //     'https://fast.wistia.net/assets/external/E-v1.js'
                //     );
                //     document.head.appendChild(wistiaScript);
                // }
                // window._wq = window._wq || [];
                // _wq.push({
                //     id: this.videoSource(this.lessonData.sources.wistia),
                //     onReady: video => {
                //     this.videoPlayer = video;
                //     video.bind('timechange', async t => {
                //         let current = Math.floor(((t / video.duration()) * 100) / 5) * 5;
                //         this.floatingProgress = Math.round((t / video.duration()) * 100);
                //         await this.logProgress(current);
                //     });
                //     video.bind('play', () => {
                //         if (this.hasFinished) {
                //         this.hasFinished = false;
                //         }
                //         this.isPlaying = true;
                //     });
                //     video.bind('pause', () => {
                //         this.isPlaying = false;
                //     });
                //     video.bind('end', () => {
                //         this.hasFinished = true;
                //     });
                //     }
                // });
                // this.$gtag.event('select_content', {
                //     event_category: 'engagement',
                //     event_label: 'wistia'
                // });
                // } else {
                // this.videoplyr = new Plyr('#videoplyr-free');
                // this.videoplyr.on('ready', this.floatingTogglePlayback);
                // this.videoplyr.on('timeupdate', this.onTimeupdate);
                // this.videoplyr.on('seeking', this.onSeeking);
                // this.videoplyr.on('seeked', this.onSeeked);
                // this.videoplyr.on('playing', this.onPlaying);
                // this.videoplyr.on('pause', this.onPause);
                // this.videoplyr.on('ended', this.handleFinished);
                // this.$gtag.event('select_content', {
                //     event_category: 'engagement',
                //     event_label: 'free-player'
                // });
                }

                this.$gtag.event('select_content', {
                event_category: 'engagement',
                event_label: 'video'
                });
            // }

                // this.player.on('timeupdate', this.onTimeupdate);
                // this.player.on('seeking', this.onSeeking);
                // this.player.on('seeked', this.onSeeked);
                // this.player.on('playing', this.onPlaying);
                // this.player.on('pause', this.onPause);
            }

        },

        watch: {
            isActive: {
                handler: function (nValue) {
    
                    // if (nValue == 'video') {
                    //     this.videoplyr.play();
                    // } else if (nValue == 'audio') {
                    //     this.videoplyr.pause();
                    // } else if (nValue == 'review') {
                    //     this.videoplyr.pause();
                    // } else if ( nValue == 'dailogue') {
                    //     this.videoplyr.pause();
                    // }
                },
                deep: true
            }
        }


    })

    lessonDashboardApp.fetchLessons
    // lessonDashboardApp.mountVideo

    function printStrokePoints(data) {
        var pointStrs = data.drawnPath.points.map((point) => `{x: ${point.x}, y: ${point.y}}`);
        console.log(`[${pointStrs.join(', ')}]`);
    }


	$( function() {
		$( ".rearrange-list" ).sortable({
			revert: true
        });
        
        $( "#navbar-search-main .input-group-append" ).mouseenter(function(){
            $("#searchToolTip").show()
        })

        $( "#navbar-search-main .input-group-append" ).mouseleave(function(){
            $("#searchToolTip").hide()
        })
	} );
	

</script>